# Video Streaming Platform - Docker Compose
version: '3.8'

services:
  streaming-platform:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: video-streaming-platform
    restart: unless-stopped
    ports:
      - "3000:3000"     # Web interface
      - "1935:1935"     # RTMP server
      - "8000:8000"     # HTTP-FLV server
    environment:
      - NODE_ENV=production
      - RTMP_PORT=1935
      - HTTP_PORT=8000
      - PORT=3000
      - MEDIA_ROOT=/app/media
      - RECORDING_PATH=/app/recordings
      - FFMPEG_PATH=/usr/bin/ffmpeg
      - ENABLE_AUTH=false
      - ENABLE_RECORDING=true
      - ENABLE_HLS=true
      - ENABLE_DASH=false
      - MAX_CONNECTIONS=1000
      - MAX_BITRATE=5000
      - LOG_LEVEL=2
    volumes:
      - ./media:/app/media:rw
      - ./recordings:/app/recordings:rw
      - ./logs:/app/logs:rw
      - ./ssl:/app/ssl:rw
      - ./config:/app/config:rw
    networks:
      - streaming-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: streaming-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - streaming-network
    command: redis-server --appendonly yes

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: streaming-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - streaming-platform
    networks:
      - streaming-network

volumes:
  redis-data:

networks:
  streaming-network:
    driver: bridge