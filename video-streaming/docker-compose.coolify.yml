# Video Streaming Platform - Coolify Compatible Docker Compose
# This version removes all port bindings - Coolify handles port mapping via UI configuration
version: '3.8'

services:
  streaming-platform:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: video-streaming-platform
    restart: unless-stopped
    # NOTE: No ports section - Coolify manages port mapping in deployment config
    # Original ports: 3000 (web), 1935 (RTMP), 8000 (HTTP-FLV)
    environment:
      - NODE_ENV=production
      - RTMP_PORT=1935
      - HTTP_PORT=8000
      - PORT=3000
      - MEDIA_ROOT=/app/media
      - FFMPEG_PATH=/usr/bin/ffmpeg
      - ENABLE_AUTH=false
      - ENABLE_RECORDING=true
      - ENABLE_HLS=true
      - ENABLE_DASH=false
      - MAX_CONNECTIONS=1000
      - MAX_BITRATE=5000
      - LOG_LEVEL=2
      # FLV streaming base URL - set this to your public domain without port
      # Example: https://stream-app.kjeldager.io (no port 8000)
      # If not set, defaults to current host with HTTP_PORT
      - FLV_BASE_URL=https://stream-app.kjeldager.io
    volumes:
      - media:/app/media
      - recordings:/app/recordings
      - logs:/app/logs
      - ssl:/app/ssl
    networks:
      - streaming-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      # Coolify service labels for identification
      - "coolify.managed=true"
      - "coolify.service=streaming-platform"
      - "coolify.type=application"
           
      # Enable Traefik for this service (REQUIRED)
      - "traefik.enable=true"
      
      # Traefik labels for RTMP TCP routing (port 1935)
      - "traefik.tcp.routers.streaming-rtmp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.streaming-rtmp.entrypoints=rtmp"
      - "traefik.tcp.services.streaming-rtmp.loadbalancer.server.port=1935"
      
      # Traefik labels for HTTP/HTTPS routing (port 3000) - Web interface
      - "traefik.http.routers.streaming-web.rule=Host(`stream-app.kjeldager.io`)"
      - "traefik.http.routers.streaming-web.entrypoints=websecure"
      - "traefik.http.routers.streaming-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.streaming-web.loadbalancer.server.port=3000"
  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: streaming-redis
    restart: unless-stopped
    # NOTE: No ports section - Redis accessible internally via container name
    # Original port: 6379
    volumes:
      - redis-data:/data
    networks:
      - streaming-network
    command: redis-server --appendonly yes
    labels:
      - "coolify.managed=true"
      - "coolify.service=redis"
      - "coolify.type=database"

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: streaming-nginx
    restart: unless-stopped
    # NOTE: No ports section - Coolify handles HTTP/HTTPS routing
    # Original ports: 80, 443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - streaming-platform
    networks:
      - streaming-network
    labels:
      - "coolify.managed=true"
      - "coolify.service=nginx"
      - "coolify.type=proxy"

volumes:
  redis-data:

networks:
  streaming-network:
    driver: bridge

# COOLIFY DEPLOYMENT NOTES:
# ========================
# 
# TRAEFIK CONFIGURATION:
# ----------------------
# This compose file includes Traefik labels for automatic routing.
# You need to configure Traefik entrypoints in your Coolify setup:
# 
# Required Traefik Entrypoints:
# - websecure: Port 443 (HTTPS)
# - rtmp: Port 1935 (TCP) - Custom entrypoint for RTMP
# 
# Add this to your Traefik static configuration:
# entryPoints:
#   rtmp:
#     address: ":1935"
# 
# SINGLE DOMAIN SETUP:
# ====================
# Web Interface: https://stream-app.kjeldager.io
# HTTP-FLV Playback: https://stream-app.kjeldager.io/live/your-stream-key.flv
# RTMP Streaming: rtmp://stream-app.kjeldager.io:1935/live
# Stream Key: your-stream-key
# 
# IMPORTANT: Set FLV_BASE_URL environment variable to your public domain
# without port 8000. Example: FLV_BASE_URL=https://stream-app.kjeldager.io
# This ensures FLV URLs are generated correctly for the public domain.
# 
# Nginx handles internal routing:
# - /live/* → streaming-platform:8000 (HTTP-FLV service)
# - /* → streaming-platform:3000 (Web interface)
# 
# Redis is internal-only (no external port needed)
# 
# Environment Variables:
# Set these in Coolify's environment configuration if different from defaults
# 
# REQUIRED FOR PROPER FLV URL GENERATION:
# FLV_BASE_URL: Your public domain without port 8000
#               Example: https://stream-app.kjeldager.io
#               If not set, defaults to current host with :8000 port
# 
# Other available variables:
# - RTMP_PORT: RTMP server port (default: 1935)
# - HTTP_PORT: HTTP-FLV server port (default: 8000)
# - PORT: Web interface port (default: 3000)
# 
# Volume Mounts:
# Ensure Coolify has access to:
# - ./media (for uploaded media files)
# - ./recordings (for recorded streams)
# - ./logs (for application logs)
# - ./ssl (for SSL certificates if using custom certs)